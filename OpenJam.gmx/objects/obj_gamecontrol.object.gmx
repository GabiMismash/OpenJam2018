<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Starter Variables
global.debug = false
global.pause = false
global.charmenu = false
global.pausemenu = false
global.menuselect = 0 //0 = resume, 1 = save, 2 = load, 3 = options, 4 = quit
global.menusub = 0 //0 = root, 1 = options
global.inputL = false
global.inputR = false
global.inputU = false
global.inputD = false
global.inputA = false
global.inputB = false
global.inputStart = false
global.inputSelect = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug stuff
if(keyboard_check_pressed(vk_home))
    {
        if(global.debug = true)
            {
                global.debug = false
            }
        else
            {
                global.debug = true
            }
    }
if(global.debug = true and keyboard_check_pressed(vk_end))
    {
        room_restart()
    }
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Input
if(keyboard_check_pressed(vk_up))
    {
        global.inputU = true
    }
if(keyboard_check_released(vk_up))
    {
        global.inputU = false
    }
if(keyboard_check_pressed(vk_down))
    {
        global.inputD = true
    }
if(keyboard_check_released(vk_down))
    {
        global.inputD = false
    }
if(keyboard_check_pressed(vk_left))
    {
        global.inputL = true
    }
if(keyboard_check_released(vk_left))
    {
        global.inputL = false
    }
if(keyboard_check_pressed(vk_right))
    {
        global.inputR = true
    }
if(keyboard_check_released(vk_right))
    {
        global.inputR = false
    }
if(keyboard_check_pressed(vk_escape))
    {
        global.inputStart = true
    }
else
    {
        global.inputStart = false
    }
if(keyboard_check_pressed(vk_shift))
    {
        global.inputSelect = true
    }
else
    {
        global.inputSelect = false
    }
if(keyboard_check_pressed(ord('Z')))
    {
        global.inputB = true
    }
if(keyboard_check_released(ord('Z')))
    {
        global.inputB = false
    }
if(keyboard_check_pressed(ord('X')))
    {
        global.inputA = true
    }
if(keyboard_check_released(ord('X')))
    {
        global.inputA = false
    }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Menus

//Pause Menu
if(global.inputStart = true)
    {
        if(global.pause = true and global.pausemenu = true)
            {
                global.pausemenu = false
                global.pause = false
            }
        else
        {
            if(global.pause = false and global.pausemenu = false)
                {
                    global.pausemenu = true
                    global.pause = true
                }
        }
    }
if(global.pausemenu = true)//0 = resume, 1 = save, 2 = load, 3 = options, 4 = quit
    {
        if(keyboard_check_pressed(vk_down))
            {
                global.menuselect = global.menuselect + 1
            }
        if(global.menuselect &gt; 4)
            {
                global.menuselect = 0
            }
        if(keyboard_check_pressed(vk_up))
            {
                global.menuselect = global.menuselect - 1
            }
        if(global.menuselect &lt; 0)
            {
                global.menuselect = 4
            }
        if(global.menuselect = 0 and global.inputA = true)
            {
                global.pausemenu = false
                global.pause = false
            }
        if(global.menuselect = 4 and global.inputA = true)
            {
                game_end()
            }
    }
    

//Char Menu
if(global.inputSelect = true)
    {
        if(global.pause = true and global.charmenu = true)
            {
                global.charmenu = false
                global.pause = false
            }
        else
        {
            if(global.pause = false and global.charmenu = false)
                {
                    global.charmenu = true
                    global.pause = true
                }
        }
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Display debug
if(global.debug = true)
    {
        draw_text(16,16,"Pause "+string(global.pause))
        draw_text(16,32,"Pause Menu "+string(global.pausemenu))
        draw_text(16,48,"Char Menu "+string(global.charmenu))
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pause Menu
if(global.pausemenu = true)
    {
        draw_set_alpha(.75)
        draw_set_colour(c_black)
        draw_rectangle(0,0,view_wview[0],view_hview[0],false)
        draw_set_alpha(1)
        draw_set_colour(c_silver)
        draw_set_font(font0)
        draw_set_halign(fa_center)
        if(global.menusub = 0)//0 = resume, 1 = save, 2 = load, 3 = options, 4 = quit
            {
                draw_text(view_wview[0]/2,(view_hview[0]/2)-128,"Paused")
                //Resume
                if(global.menuselect = 0)
                    {
                        draw_set_colour(c_white)
                        draw_text(view_wview[0]/2,(view_hview[0]/2)-64,"Resume")
                        draw_set_colour(c_gray)
                    }
                else
                    {
                        draw_text(view_wview[0]/2,(view_hview[0]/2)-64,"Resume")
                    }
                //Save
                if(global.menuselect = 1)
                    {
                        draw_set_colour(c_white)
                        draw_text(view_wview[0]/2,(view_hview[0]/2)-32,"Save")
                        draw_set_colour(c_gray)
                    }
                else
                    {
                        draw_text(view_wview[0]/2,(view_hview[0]/2)-32,"Save")
                    }
                //Load
                if(global.menuselect = 2)
                    {
                        draw_set_colour(c_white)
                        draw_text(view_wview[0]/2,(view_hview[0]/2),"Load")
                        draw_set_colour(c_gray)
                    }
                else
                    {
                        draw_text(view_wview[0]/2,(view_hview[0]/2),"Load")
                    }
                //Options
                if(global.menuselect = 3)
                    {
                        draw_set_colour(c_white)
                        draw_text(view_wview[0]/2,(view_hview[0]/2)+32,"Options")
                        draw_set_colour(c_gray)
                    }
                else
                    {
                        draw_text(view_wview[0]/2,(view_hview[0]/2)+32,"Options")
                    }
                //Quit
                if(global.menuselect = 4)
                    {
                        draw_set_colour(c_white)
                        draw_text(view_wview[0]/2,(view_hview[0]/2)+64,"Quit")
                        draw_set_colour(c_gray)
                    }
                else
                    {
                        draw_text(view_wview[0]/2,(view_hview[0]/2)+64,"Quit")
                    }
            }
    }
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
